/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.io.File;

import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.text.JTextComponent;

import Model.RSA_Algorithm;
import Model.SHA512_Hashing;

/**
 *
 * @author DELL
 */
public class Main extends JFrame {

	/**
	 * Creates new form NewJFrame
	 */
	public Main() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		rsaPanel = new javax.swing.JPanel();
		vigenereTitle1 = new javax.swing.JLabel();
		jPanel11 = new javax.swing.JPanel();
		keyLb1 = new javax.swing.JLabel();
		publickeyField = new javax.swing.JTextField();
		importPubBtn = new javax.swing.JButton();
		alphabetLb3 = new javax.swing.JLabel();
		privatekeyField = new javax.swing.JTextField();
		importPriBtn = new javax.swing.JButton();
		jPanel2 = new javax.swing.JPanel();
		jLabel30 = new javax.swing.JLabel();
		inputPathField = new javax.swing.JTextField();
		chooseBillPathBtn = new javax.swing.JButton();
		signBtn = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		billAfterSignArea = new javax.swing.JTextArea();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("Encryption & Decryption Tools");
		setIconImages(null);
		setLocation(new java.awt.Point(200, 100));
		setMinimumSize(new java.awt.Dimension(1000, 600));
		setResizable(false);

		rsaPanel.setPreferredSize(new java.awt.Dimension(1000, 570));

		vigenereTitle1.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
		vigenereTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		vigenereTitle1.setText("Ký bằng thuật toán RSA");
		vigenereTitle1.setPreferredSize(new java.awt.Dimension(900, 100));
		rsaPanel.add(vigenereTitle1);

		jPanel11.setPreferredSize(new java.awt.Dimension(900, 100));
		jPanel11.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

		keyLb1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		keyLb1.setText("Public key");
		keyLb1.setPreferredSize(new java.awt.Dimension(100, 30));
		jPanel11.add(keyLb1);

		publickeyField.setToolTipText("Copy Public key");
		publickeyField.setDisabledTextColor(new java.awt.Color(0, 0, 0));
		publickeyField.setEnabled(false);
		publickeyField.setPreferredSize(new java.awt.Dimension(650, 30));
		publickeyField.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				publickeyFieldMouseClicked(evt);
			}
		});
		jPanel11.add(publickeyField);

		importPubBtn.setText("Thêm khóa");
		importPubBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				importPubBtnActionPerformed(evt);
			}
		});
		jPanel11.add(importPubBtn);

		alphabetLb3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		alphabetLb3.setText("Private key");
		alphabetLb3.setPreferredSize(new java.awt.Dimension(100, 30));
		jPanel11.add(alphabetLb3);

		privatekeyField.setToolTipText("Copy Private key");
		privatekeyField.setDisabledTextColor(new java.awt.Color(0, 0, 0));
		privatekeyField.setEnabled(false);
		privatekeyField.setPreferredSize(new java.awt.Dimension(650, 30));
		privatekeyField.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				privatekeyFieldMouseClicked(evt);
			}
		});
		jPanel11.add(privatekeyField);

		importPriBtn.setText("Thêm khóa");
		importPriBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				importPriBtnActionPerformed(evt);
			}
		});
		jPanel11.add(importPriBtn);

		rsaPanel.add(jPanel11);

		jPanel2.setPreferredSize(new java.awt.Dimension(900, 330));
		jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 15));

		jLabel30.setText("Đường dẫn của đơn hàng");
		jPanel2.add(jLabel30);

		inputPathField.setPreferredSize(new java.awt.Dimension(550, 30));
		jPanel2.add(inputPathField);

		chooseBillPathBtn.setText("Chọn từ thư mục");
		chooseBillPathBtn.setPreferredSize(new java.awt.Dimension(121, 30));
		chooseBillPathBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				chooseBillPathBtnActionPerformed(evt);
			}
		});
		jPanel2.add(chooseBillPathBtn);

		signBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
		signBtn.setText("Tạo \nchữ ký \nsố");
		signBtn.setPreferredSize(new java.awt.Dimension(130, 250));
		signBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				signBtnActionPerformed(evt);
			}
		});
		jPanel2.add(signBtn);

		jScrollPane1.setAutoscrolls(true);
		jScrollPane1.setPreferredSize(new java.awt.Dimension(700, 250));

		billAfterSignArea.setBackground(new java.awt.Color(255, 255, 255));
		billAfterSignArea.setColumns(20);
		billAfterSignArea.setLineWrap(true);
		billAfterSignArea.setRows(5);
		billAfterSignArea.setToolTipText("Copy this sign");
		billAfterSignArea.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
		billAfterSignArea.setDisabledTextColor(new java.awt.Color(51, 51, 51));
		billAfterSignArea.setEnabled(false);
		billAfterSignArea.setPreferredSize(new java.awt.Dimension(680, 200));
		billAfterSignArea.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				billAfterSignAreaMouseClicked(evt);
			}
		});
		jScrollPane1.setViewportView(billAfterSignArea);

		jPanel2.add(jScrollPane1);

		rsaPanel.add(jPanel2);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE)
						.addComponent(rsaPanel, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(0, 0, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE)
						.addComponent(rsaPanel, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(0, 0, Short.MAX_VALUE)));

		pack();
	}// </editor-fold>

	private void signBtnActionPerformed(java.awt.event.ActionEvent evt) {
		// signing
		try {
			if (this.privatekeyField.getText().equals("")) {
				JOptionPane.showMessageDialog(null, "Please add the private key for signing.");
			} else if (this.inputPathField.getText().equals("")) {
				JOptionPane.showMessageDialog(null, "Please add the path of the bill for signing.");
			} else {
				String path = this.inputPathField.getText();
				SHA512_Hashing hash = new SHA512_Hashing();
				RSA_Algorithm rsa = new RSA_Algorithm();
				String hashFile = hash.hashFile(path);
				this.billAfterSignArea.setText(rsa.encryptString(hashFile, this.privatekeyField.getText()));
			}
		} catch (Exception e) {
			JOptionPane.showMessageDialog(this, e.getMessage());
		}
	}

	private void billAfterSignAreaMouseClicked(java.awt.event.MouseEvent evt) {
		// copy the sign
		if (!this.billAfterSignArea.getText().equals("")) {
			String str = this.billAfterSignArea.getText();
			Clipboard clip = Toolkit.getDefaultToolkit().getSystemClipboard();
			StringSelection strse1 = new StringSelection(str);
			clip.setContents(strse1, strse1);
			JOptionPane.showMessageDialog(null, "SIGN IS COPIED!");
		}
	}

	private void importPubBtnActionPerformed(java.awt.event.ActionEvent evt) {
		uploadFile(this.publickeyField);
	}

	private void importPriBtnActionPerformed(java.awt.event.ActionEvent evt) {
		uploadFile(this.privatekeyField);
	}

	private void chooseBillPathBtnActionPerformed(java.awt.event.ActionEvent evt) {
		uploadFile(this.inputPathField);
	}

	private void publickeyFieldMouseClicked(java.awt.event.MouseEvent evt) {
		// copy public key
		if (!this.publickeyField.getText().equals("")) {
			String str = this.publickeyField.getText();
			Clipboard clip = Toolkit.getDefaultToolkit().getSystemClipboard();
			StringSelection strse1 = new StringSelection(str);
			clip.setContents(strse1, strse1);
			JOptionPane.showMessageDialog(null, "KEY IS COPIED!");
		}
	}

	private void privatekeyFieldMouseClicked(java.awt.event.MouseEvent evt) {
		// copy private key
		if (!this.privatekeyField.getText().equals("")) {
			String str = this.privatekeyField.getText();
			Clipboard clip = Toolkit.getDefaultToolkit().getSystemClipboard();
			StringSelection strse1 = new StringSelection(str);
			clip.setContents(strse1, strse1);
			JOptionPane.showMessageDialog(null, "KEY IS COPIED!");
		}
	}

	public void uploadFile(JTextComponent inputField) {
		try {
			JFileChooser fileChooser = new JFileChooser(".");
			fileChooser.setMultiSelectionEnabled(false);
			int x = fileChooser.showDialog(this, "Choose a file");

			if (x == JFileChooser.APPROVE_OPTION) {
				File file_path = new File(fileChooser.getSelectedFile().getAbsolutePath());
				inputField.setText(file_path.toString());
			}

		} catch (Exception e) {
			JOptionPane.showMessageDialog(this, e.getMessage());
		}
	}

	// Variables declaration - do not modify
	private javax.swing.JLabel alphabetLb3;
	private javax.swing.JTextArea billAfterSignArea;
	private javax.swing.JButton chooseBillPathBtn;
	private javax.swing.JButton importPriBtn;
	private javax.swing.JButton importPubBtn;
	private javax.swing.JTextField inputPathField;
	private javax.swing.JLabel jLabel30;
	private javax.swing.JPanel jPanel11;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JLabel keyLb1;
	private javax.swing.JTextField privatekeyField;
	private javax.swing.JTextField publickeyField;
	private javax.swing.JPanel rsaPanel;
	private javax.swing.JButton signBtn;
	private javax.swing.JLabel vigenereTitle1;
	// End of variables declaration
}
